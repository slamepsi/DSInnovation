// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Text;
using System.Reflection;

namespace serverDS
{
	public class client
	{
		private TcpClient tcpClient;
		private NetworkStream stream;

		public client ( object nouveauClient)
		{
			Console.WriteLine("client connected");
			tcpClient = (TcpClient) nouveauClient;
			stream = tcpClient.GetStream();

			Thread listen = new Thread( new ThreadStart(listenClient));
			listen.Start();
		}

		private void listenClient () 
		{
			byte[] message = new byte[4096];

			while ( MainClass.IsRunning ) 
			{
				int byteRead = 0;
				try 
				{
					byteRead = stream.Read(message, 0, 4096);
				} catch (Exception e) 
				{
					Console.WriteLine("Error (1) : d√©connexion du client. \n-"+e.Message);
					return;
				}

				if(byteRead == 0 )
					return;

				ASCIIEncoding encoder = new ASCIIEncoding();
				string information = encoder.GetString (message, 0, 4096);
				Console.WriteLine( information );

				String[] NetString = information.Split(':');
				switch( NetString[0])
				{
					case "addFamily":
						add_family( (string)NetString[1], (string)NetString[2] ); // (string)nom, (string)adresse
						break;
					case "delFamily":
						del_family( int.Parse(NetString[1]) ); // (int)id
						break;
				}
			}
		}

		private void add_family (string nom, string adresse)
		{
			String cmdText = "INSERT INTO Famille (nom, adresse, points) VALUES (' ', ' ', )";
			Console.WriteLine("Family added");
 		}

		private void del_family (int id)
		{
			String cmdText = "DELETE FROM Famille WHERE nom = ' '";
			Console.WriteLine("Family errased");
		}

		private void modif_family (string nom, string adresse, int points)
		{

		}

		private void modif_points (int type, int code)
		{

		}
	}
}